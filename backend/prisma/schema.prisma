// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int              @id @default(autoincrement())
  email             String           @unique
  name              String?
  password          String
  role              Role             @default(USER)
  userProfile       UserProfile?
  employerProfile   EmployerProfile?
  jobs              Job[]
  application       Application[]
  employerProfileId Int?
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  content      String?
  salary       Int?
  experience   Experience    @default(ENTRYLevel)
  education    String?
  jobtype      Jobtype       @default(FULLTIME)
  skills       String[]      @default([])
  workLocation WorkLocation  @default(ONSITE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  employer     User          @relation(fields: [employerId], references: [id])
  employerId   Int
  applications Application[]
  boost        Boolean       @default(false)
}

model Application {
  id        Int       @id @default(autoincrement())
  content   String
  status    AppStatus @default(PENDING)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [UserId], references: [id]) //jobseeker Id
  UserId    Int
  job       Job       @relation(fields: [jobId], references: [id])
  jobId     Int

  @@unique([jobId, UserId], name: "userId_jobId") //for one user application to one jobpost
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  skills    String[]
  bio       String?
  location  String?
  resumeUrl String?
  photoUrl  String?
  education String   @default("Unknown")
  user      User     @relation(fields: [UserId], references: [id])
  UserId    Int      @unique
}

model EmployerProfile {
  id              Int     @id @default(autoincrement())
  companyName     String?
  bio             String?
  companyType     String?
  noEmployees     Int?
  location        String?
  companyurl      String?
  companyphotourl String?
  User            User    @relation(fields: [UserId], references: [id])
  UserId          Int     @unique
}

enum Role {
  USER
  EMPLOYER
  ADMIN
}

enum AppStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum WorkLocation {
  ONSITE
  REMOTE
  HYBRID
}

enum Experience {
  ENTRYLevel
  MIDLevel
  SENIOR
}

enum Jobtype {
  PARTTIME
  FULLTIME
  FREELANCE
  INTERSHIP
}
